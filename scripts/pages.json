[{"name":"fun AvatarView.loadImage(data: Any?, requestBuilder: RequestBuilder<*>)","description":"io.getstream.avatarview.glide.loadImage","location":"avatarview-glide/io.getstream.avatarview.glide/load-image.html","searchKeys":["loadImage","fun AvatarView.loadImage(data: Any?, requestBuilder: RequestBuilder<*>)","io.getstream.avatarview.glide.loadImage"]},{"name":"fun AvatarView.loadImage(data: List<Any?>, crossFadeEnabled: Boolean = true, requestListener: RequestListener<Drawable>? = null, requestOptions: () -> RequestOptions = { RequestOptions() })","description":"io.getstream.avatarview.glide.loadImage","location":"avatarview-glide/io.getstream.avatarview.glide/load-image.html","searchKeys":["loadImage","fun AvatarView.loadImage(data: List<Any?>, crossFadeEnabled: Boolean = true, requestListener: RequestListener<Drawable>? = null, requestOptions: () -> RequestOptions = { RequestOptions() })","io.getstream.avatarview.glide.loadImage"]},{"name":"fun AvatarView.loadImage(data: List<Any?>, requestBuilder: RequestBuilder<*>)","description":"io.getstream.avatarview.glide.loadImage","location":"avatarview-glide/io.getstream.avatarview.glide/load-image.html","searchKeys":["loadImage","fun AvatarView.loadImage(data: List<Any?>, requestBuilder: RequestBuilder<*>)","io.getstream.avatarview.glide.loadImage"]},{"name":"inline fun AvatarView.loadImage(data: Any?, crossFadeEnabled: Boolean = true, requestListener: RequestListener<Drawable>? = null, requestOptions: () -> RequestOptions = { RequestOptions() })","description":"io.getstream.avatarview.glide.loadImage","location":"avatarview-glide/io.getstream.avatarview.glide/load-image.html","searchKeys":["loadImage","inline fun AvatarView.loadImage(data: Any?, crossFadeEnabled: Boolean = true, requestListener: RequestListener<Drawable>? = null, requestOptions: () -> RequestOptions = { RequestOptions() })","io.getstream.avatarview.glide.loadImage"]},{"name":"BOTTOM_LEFT()","description":"io.getstream.avatarview.IndicatorPosition.BOTTOM_LEFT","location":"avatarview/io.getstream.avatarview/-indicator-position/-b-o-t-t-o-m_-l-e-f-t/index.html","searchKeys":["BOTTOM_LEFT","BOTTOM_LEFT()","io.getstream.avatarview.IndicatorPosition.BOTTOM_LEFT"]},{"name":"BOTTOM_RIGHT()","description":"io.getstream.avatarview.IndicatorPosition.BOTTOM_RIGHT","location":"avatarview/io.getstream.avatarview/-indicator-position/-b-o-t-t-o-m_-r-i-g-h-t/index.html","searchKeys":["BOTTOM_RIGHT","BOTTOM_RIGHT()","io.getstream.avatarview.IndicatorPosition.BOTTOM_RIGHT"]},{"name":"CIRCLE(0)","description":"io.getstream.avatarview.AvatarShape.CIRCLE","location":"avatarview/io.getstream.avatarview/-avatar-shape/-c-i-r-c-l-e/index.html","searchKeys":["CIRCLE","CIRCLE(0)","io.getstream.avatarview.AvatarShape.CIRCLE"]},{"name":"ROUNDED_RECT(1)","description":"io.getstream.avatarview.AvatarShape.ROUNDED_RECT","location":"avatarview/io.getstream.avatarview/-avatar-shape/-r-o-u-n-d-e-d_-r-e-c-t/index.html","searchKeys":["ROUNDED_RECT","ROUNDED_RECT(1)","io.getstream.avatarview.AvatarShape.ROUNDED_RECT"]},{"name":"TOP_LEFT()","description":"io.getstream.avatarview.IndicatorPosition.TOP_LEFT","location":"avatarview/io.getstream.avatarview/-indicator-position/-t-o-p_-l-e-f-t/index.html","searchKeys":["TOP_LEFT","TOP_LEFT()","io.getstream.avatarview.IndicatorPosition.TOP_LEFT"]},{"name":"TOP_RIGHT()","description":"io.getstream.avatarview.IndicatorPosition.TOP_RIGHT","location":"avatarview/io.getstream.avatarview/-indicator-position/-t-o-p_-r-i-g-h-t/index.html","searchKeys":["TOP_RIGHT","TOP_RIGHT()","io.getstream.avatarview.IndicatorPosition.TOP_RIGHT"]},{"name":"annotation class InternalAvatarViewApi","description":"io.getstream.avatarview.internal.InternalAvatarViewApi","location":"avatarview/io.getstream.avatarview.internal/-internal-avatar-view-api/index.html","searchKeys":["InternalAvatarViewApi","annotation class InternalAvatarViewApi","io.getstream.avatarview.internal.InternalAvatarViewApi"]},{"name":"class AvatarView constructor(context: Context, attrs: AttributeSet?, defStyleAttr: Int) : AppCompatImageView, CoroutineScope","description":"io.getstream.avatarview.AvatarView","location":"avatarview/io.getstream.avatarview/-avatar-view/index.html","searchKeys":["AvatarView","class AvatarView constructor(context: Context, attrs: AttributeSet?, defStyleAttr: Int) : AppCompatImageView, CoroutineScope","io.getstream.avatarview.AvatarView"]},{"name":"enum AvatarShape : Enum<AvatarShape> ","description":"io.getstream.avatarview.AvatarShape","location":"avatarview/io.getstream.avatarview/-avatar-shape/index.html","searchKeys":["AvatarShape","enum AvatarShape : Enum<AvatarShape> ","io.getstream.avatarview.AvatarShape"]},{"name":"enum IndicatorPosition : Enum<IndicatorPosition> ","description":"io.getstream.avatarview.IndicatorPosition","location":"avatarview/io.getstream.avatarview/-indicator-position/index.html","searchKeys":["IndicatorPosition","enum IndicatorPosition : Enum<IndicatorPosition> ","io.getstream.avatarview.IndicatorPosition"]},{"name":"fun AvatarView(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0)","description":"io.getstream.avatarview.AvatarView.AvatarView","location":"avatarview/io.getstream.avatarview/-avatar-view/-avatar-view.html","searchKeys":["AvatarView","fun AvatarView(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0)","io.getstream.avatarview.AvatarView.AvatarView"]},{"name":"fun InternalAvatarViewApi()","description":"io.getstream.avatarview.internal.InternalAvatarViewApi.InternalAvatarViewApi","location":"avatarview/io.getstream.avatarview.internal/-internal-avatar-view-api/-internal-avatar-view-api.html","searchKeys":["InternalAvatarViewApi","fun InternalAvatarViewApi()","io.getstream.avatarview.internal.InternalAvatarViewApi.InternalAvatarViewApi"]},{"name":"fun combine(bitmaps: List<Bitmap?>, size: Int, maxSectionSize: Int, errorPlaceholder: Drawable? = null): Bitmap","description":"io.getstream.avatarview.AvatarBitmapCombiner.combine","location":"avatarview/io.getstream.avatarview/-avatar-bitmap-combiner/combine.html","searchKeys":["combine","fun combine(bitmaps: List<Bitmap?>, size: Int, maxSectionSize: Int, errorPlaceholder: Drawable? = null): Bitmap","io.getstream.avatarview.AvatarBitmapCombiner.combine"]},{"name":"fun combine(vararg bitmaps: Bitmap?, size: Int, maxSectionSize: Int, errorPlaceholder: Drawable? = null): Bitmap","description":"io.getstream.avatarview.AvatarBitmapCombiner.combine","location":"avatarview/io.getstream.avatarview/-avatar-bitmap-combiner/combine.html","searchKeys":["combine","fun combine(vararg bitmaps: Bitmap?, size: Int, maxSectionSize: Int, errorPlaceholder: Drawable? = null): Bitmap","io.getstream.avatarview.AvatarBitmapCombiner.combine"]},{"name":"fun drawableToBitmap(drawable: Drawable?, size: Int): Bitmap?","description":"io.getstream.avatarview.AvatarBitmapCombiner.drawableToBitmap","location":"avatarview/io.getstream.avatarview/-avatar-bitmap-combiner/drawable-to-bitmap.html","searchKeys":["drawableToBitmap","fun drawableToBitmap(drawable: Drawable?, size: Int): Bitmap?","io.getstream.avatarview.AvatarBitmapCombiner.drawableToBitmap"]},{"name":"fun setIndicatorRes(drawableRes: Int)","description":"io.getstream.avatarview.AvatarView.setIndicatorRes","location":"avatarview/io.getstream.avatarview/-avatar-view/set-indicator-res.html","searchKeys":["setIndicatorRes","fun setIndicatorRes(drawableRes: Int)","io.getstream.avatarview.AvatarView.setIndicatorRes"]},{"name":"object AvatarBitmapCombiner","description":"io.getstream.avatarview.AvatarBitmapCombiner","location":"avatarview/io.getstream.avatarview/-avatar-bitmap-combiner/index.html","searchKeys":["AvatarBitmapCombiner","object AvatarBitmapCombiner","io.getstream.avatarview.AvatarBitmapCombiner"]},{"name":"open override val coroutineContext: CoroutineContext","description":"io.getstream.avatarview.AvatarView.coroutineContext","location":"avatarview/io.getstream.avatarview/-avatar-view/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","io.getstream.avatarview.AvatarView.coroutineContext"]},{"name":"val value: Int","description":"io.getstream.avatarview.AvatarShape.value","location":"avatarview/io.getstream.avatarview/-avatar-shape/value.html","searchKeys":["value","val value: Int","io.getstream.avatarview.AvatarShape.value"]},{"name":"var avatarBorderColor: Int","description":"io.getstream.avatarview.AvatarView.avatarBorderColor","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-border-color.html","searchKeys":["avatarBorderColor","var avatarBorderColor: Int","io.getstream.avatarview.AvatarView.avatarBorderColor"]},{"name":"var avatarBorderColorArray: IntArray","description":"io.getstream.avatarview.AvatarView.avatarBorderColorArray","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-border-color-array.html","searchKeys":["avatarBorderColorArray","var avatarBorderColorArray: IntArray","io.getstream.avatarview.AvatarView.avatarBorderColorArray"]},{"name":"var avatarBorderRadius: Float","description":"io.getstream.avatarview.AvatarView.avatarBorderRadius","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-border-radius.html","searchKeys":["avatarBorderRadius","var avatarBorderRadius: Float","io.getstream.avatarview.AvatarView.avatarBorderRadius"]},{"name":"var avatarBorderWidth: Int","description":"io.getstream.avatarview.AvatarView.avatarBorderWidth","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-border-width.html","searchKeys":["avatarBorderWidth","var avatarBorderWidth: Int","io.getstream.avatarview.AvatarView.avatarBorderWidth"]},{"name":"var avatarInitials: String?","description":"io.getstream.avatarview.AvatarView.avatarInitials","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-initials.html","searchKeys":["avatarInitials","var avatarInitials: String?","io.getstream.avatarview.AvatarView.avatarInitials"]},{"name":"var avatarInitialsBackgroundColor: Int","description":"io.getstream.avatarview.AvatarView.avatarInitialsBackgroundColor","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-initials-background-color.html","searchKeys":["avatarInitialsBackgroundColor","var avatarInitialsBackgroundColor: Int","io.getstream.avatarview.AvatarView.avatarInitialsBackgroundColor"]},{"name":"var avatarInitialsStyle: Int","description":"io.getstream.avatarview.AvatarView.avatarInitialsStyle","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-initials-style.html","searchKeys":["avatarInitialsStyle","var avatarInitialsStyle: Int","io.getstream.avatarview.AvatarView.avatarInitialsStyle"]},{"name":"var avatarInitialsTextColor: Int","description":"io.getstream.avatarview.AvatarView.avatarInitialsTextColor","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-initials-text-color.html","searchKeys":["avatarInitialsTextColor","var avatarInitialsTextColor: Int","io.getstream.avatarview.AvatarView.avatarInitialsTextColor"]},{"name":"var avatarInitialsTextSize: Int","description":"io.getstream.avatarview.AvatarView.avatarInitialsTextSize","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-initials-text-size.html","searchKeys":["avatarInitialsTextSize","var avatarInitialsTextSize: Int","io.getstream.avatarview.AvatarView.avatarInitialsTextSize"]},{"name":"var avatarInitialsTextSizeRatio: Float","description":"io.getstream.avatarview.AvatarView.avatarInitialsTextSizeRatio","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-initials-text-size-ratio.html","searchKeys":["avatarInitialsTextSizeRatio","var avatarInitialsTextSizeRatio: Float","io.getstream.avatarview.AvatarView.avatarInitialsTextSizeRatio"]},{"name":"var avatarShape: AvatarShape","description":"io.getstream.avatarview.AvatarView.avatarShape","location":"avatarview/io.getstream.avatarview/-avatar-view/avatar-shape.html","searchKeys":["avatarShape","var avatarShape: AvatarShape","io.getstream.avatarview.AvatarView.avatarShape"]},{"name":"var errorPlaceholder: Drawable?","description":"io.getstream.avatarview.AvatarView.errorPlaceholder","location":"avatarview/io.getstream.avatarview/-avatar-view/error-placeholder.html","searchKeys":["errorPlaceholder","var errorPlaceholder: Drawable?","io.getstream.avatarview.AvatarView.errorPlaceholder"]},{"name":"var indicatorBorderColor: Int","description":"io.getstream.avatarview.AvatarView.indicatorBorderColor","location":"avatarview/io.getstream.avatarview/-avatar-view/indicator-border-color.html","searchKeys":["indicatorBorderColor","var indicatorBorderColor: Int","io.getstream.avatarview.AvatarView.indicatorBorderColor"]},{"name":"var indicatorBorderColorArray: IntArray","description":"io.getstream.avatarview.AvatarView.indicatorBorderColorArray","location":"avatarview/io.getstream.avatarview/-avatar-view/indicator-border-color-array.html","searchKeys":["indicatorBorderColorArray","var indicatorBorderColorArray: IntArray","io.getstream.avatarview.AvatarView.indicatorBorderColorArray"]},{"name":"var indicatorBorderSizeCriteria: Float","description":"io.getstream.avatarview.AvatarView.indicatorBorderSizeCriteria","location":"avatarview/io.getstream.avatarview/-avatar-view/indicator-border-size-criteria.html","searchKeys":["indicatorBorderSizeCriteria","var indicatorBorderSizeCriteria: Float","io.getstream.avatarview.AvatarView.indicatorBorderSizeCriteria"]},{"name":"var indicatorColor: Int","description":"io.getstream.avatarview.AvatarView.indicatorColor","location":"avatarview/io.getstream.avatarview/-avatar-view/indicator-color.html","searchKeys":["indicatorColor","var indicatorColor: Int","io.getstream.avatarview.AvatarView.indicatorColor"]},{"name":"var indicatorDrawable: Drawable?","description":"io.getstream.avatarview.AvatarView.indicatorDrawable","location":"avatarview/io.getstream.avatarview/-avatar-view/indicator-drawable.html","searchKeys":["indicatorDrawable","var indicatorDrawable: Drawable?","io.getstream.avatarview.AvatarView.indicatorDrawable"]},{"name":"var indicatorEnabled: Boolean","description":"io.getstream.avatarview.AvatarView.indicatorEnabled","location":"avatarview/io.getstream.avatarview/-avatar-view/indicator-enabled.html","searchKeys":["indicatorEnabled","var indicatorEnabled: Boolean","io.getstream.avatarview.AvatarView.indicatorEnabled"]},{"name":"var indicatorPosition: IndicatorPosition","description":"io.getstream.avatarview.AvatarView.indicatorPosition","location":"avatarview/io.getstream.avatarview/-avatar-view/indicator-position.html","searchKeys":["indicatorPosition","var indicatorPosition: IndicatorPosition","io.getstream.avatarview.AvatarView.indicatorPosition"]},{"name":"var indicatorSizeCriteria: Float","description":"io.getstream.avatarview.AvatarView.indicatorSizeCriteria","location":"avatarview/io.getstream.avatarview/-avatar-view/indicator-size-criteria.html","searchKeys":["indicatorSizeCriteria","var indicatorSizeCriteria: Float","io.getstream.avatarview.AvatarView.indicatorSizeCriteria"]},{"name":"var maxSectionSize: Int = 4","description":"io.getstream.avatarview.AvatarView.maxSectionSize","location":"avatarview/io.getstream.avatarview/-avatar-view/max-section-size.html","searchKeys":["maxSectionSize","var maxSectionSize: Int = 4","io.getstream.avatarview.AvatarView.maxSectionSize"]},{"name":"var placeholder: Drawable?","description":"io.getstream.avatarview.AvatarView.placeholder","location":"avatarview/io.getstream.avatarview/-avatar-view/placeholder.html","searchKeys":["placeholder","var placeholder: Drawable?","io.getstream.avatarview.AvatarView.placeholder"]},{"name":"var supportRtlEnabled: Boolean","description":"io.getstream.avatarview.AvatarView.supportRtlEnabled","location":"avatarview/io.getstream.avatarview/-avatar-view/support-rtl-enabled.html","searchKeys":["supportRtlEnabled","var supportRtlEnabled: Boolean","io.getstream.avatarview.AvatarView.supportRtlEnabled"]},{"name":"abstract fun getImageRequestHeaders(): Map<String, String>","description":"io.getstream.avatarview.coil.ImageHeadersProvider.getImageRequestHeaders","location":"avatarview-coil/io.getstream.avatarview.coil/-image-headers-provider/get-image-request-headers.html","searchKeys":["getImageRequestHeaders","abstract fun getImageRequestHeaders(): Map<String, String>","io.getstream.avatarview.coil.ImageHeadersProvider.getImageRequestHeaders"]},{"name":"class AvatarImageLoaderFactory(context: Context, builder: ImageLoader.Builder.() -> Unit) : ImageLoaderFactory","description":"io.getstream.avatarview.coil.AvatarImageLoaderFactory","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-image-loader-factory/index.html","searchKeys":["AvatarImageLoaderFactory","class AvatarImageLoaderFactory(context: Context, builder: ImageLoader.Builder.() -> Unit) : ImageLoaderFactory","io.getstream.avatarview.coil.AvatarImageLoaderFactory"]},{"name":"data class Avatar(data: List<Any?>, maxSectionSize: Int, avatarBorderWidth: Int, errorPlaceholder: Drawable?, onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit, onError: (request: ImageRequest, throwable: Throwable) -> Unit)","description":"io.getstream.avatarview.coil.Avatar","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/index.html","searchKeys":["Avatar","data class Avatar(data: List<Any?>, maxSectionSize: Int, avatarBorderWidth: Int, errorPlaceholder: Drawable?, onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit, onError: (request: ImageRequest, throwable: Throwable) -> Unit)","io.getstream.avatarview.coil.Avatar"]},{"name":"fun <T : Any> getTag(key: String): T?","description":"io.getstream.avatarview.coil.Avatar.getTag","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/get-tag.html","searchKeys":["getTag","fun <T : Any> getTag(key: String): T?","io.getstream.avatarview.coil.Avatar.getTag"]},{"name":"fun <T : Any> setTagIfAbsent(key: String, newValue: T)","description":"io.getstream.avatarview.coil.Avatar.setTagIfAbsent","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/set-tag-if-absent.html","searchKeys":["setTagIfAbsent","fun <T : Any> setTagIfAbsent(key: String, newValue: T)","io.getstream.avatarview.coil.Avatar.setTagIfAbsent"]},{"name":"fun Avatar(data: List<Any?>, maxSectionSize: Int, avatarBorderWidth: Int, errorPlaceholder: Drawable?, onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit, onError: (request: ImageRequest, throwable: Throwable) -> Unit)","description":"io.getstream.avatarview.coil.Avatar.Avatar","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/-avatar.html","searchKeys":["Avatar","fun Avatar(data: List<Any?>, maxSectionSize: Int, avatarBorderWidth: Int, errorPlaceholder: Drawable?, onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit, onError: (request: ImageRequest, throwable: Throwable) -> Unit)","io.getstream.avatarview.coil.Avatar.Avatar"]},{"name":"fun AvatarBitmapFactory(context: Context)","description":"io.getstream.avatarview.coil.AvatarBitmapFactory.AvatarBitmapFactory","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-bitmap-factory/-avatar-bitmap-factory.html","searchKeys":["AvatarBitmapFactory","fun AvatarBitmapFactory(context: Context)","io.getstream.avatarview.coil.AvatarBitmapFactory.AvatarBitmapFactory"]},{"name":"fun AvatarImageLoaderFactory(context: Context, builder: ImageLoader.Builder.() -> Unit = {})","description":"io.getstream.avatarview.coil.AvatarImageLoaderFactory.AvatarImageLoaderFactory","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-image-loader-factory/-avatar-image-loader-factory.html","searchKeys":["AvatarImageLoaderFactory","fun AvatarImageLoaderFactory(context: Context, builder: ImageLoader.Builder.() -> Unit = {})","io.getstream.avatarview.coil.AvatarImageLoaderFactory.AvatarImageLoaderFactory"]},{"name":"fun getAvatarBitmapFactory(context: Context): AvatarBitmapFactory","description":"io.getstream.avatarview.coil.AvatarCoil.getAvatarBitmapFactory","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-coil/get-avatar-bitmap-factory.html","searchKeys":["getAvatarBitmapFactory","fun getAvatarBitmapFactory(context: Context): AvatarBitmapFactory","io.getstream.avatarview.coil.AvatarCoil.getAvatarBitmapFactory"]},{"name":"fun setAvatarBitmapFactory(avatarBitmapFactory: AvatarBitmapFactory?)","description":"io.getstream.avatarview.coil.AvatarCoil.setAvatarBitmapFactory","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-coil/set-avatar-bitmap-factory.html","searchKeys":["setAvatarBitmapFactory","fun setAvatarBitmapFactory(avatarBitmapFactory: AvatarBitmapFactory?)","io.getstream.avatarview.coil.AvatarCoil.setAvatarBitmapFactory"]},{"name":"fun setImageLoader(factory: ImageLoaderFactory)","description":"io.getstream.avatarview.coil.AvatarCoil.setImageLoader","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-coil/set-image-loader.html","searchKeys":["setImageLoader","fun setImageLoader(factory: ImageLoaderFactory)","io.getstream.avatarview.coil.AvatarCoil.setImageLoader"]},{"name":"inline fun AvatarView.loadImage(data: Any?, crossinline onStart: () -> Unit = {}, crossinline onComplete: () -> Unit = {}, noinline onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit = { _, _ -> }, noinline onError: (request: ImageRequest, throwable: Throwable) -> Unit = { _, _ -> }, builder: ImageRequest.Builder.() -> Unit = {})","description":"io.getstream.avatarview.coil.loadImage","location":"avatarview-coil/io.getstream.avatarview.coil/load-image.html","searchKeys":["loadImage","inline fun AvatarView.loadImage(data: Any?, crossinline onStart: () -> Unit = {}, crossinline onComplete: () -> Unit = {}, noinline onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit = { _, _ -> }, noinline onError: (request: ImageRequest, throwable: Throwable) -> Unit = { _, _ -> }, builder: ImageRequest.Builder.() -> Unit = {})","io.getstream.avatarview.coil.loadImage"]},{"name":"inline fun AvatarView.loadImage(data: List<Any?>, crossinline onStart: () -> Unit = {}, crossinline onComplete: () -> Unit = {}, noinline onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit = { _, _ -> }, noinline onError: (request: ImageRequest, throwable: Throwable) -> Unit = { _, _ -> }, builder: ImageRequest.Builder.() -> Unit = {})","description":"io.getstream.avatarview.coil.loadImage","location":"avatarview-coil/io.getstream.avatarview.coil/load-image.html","searchKeys":["loadImage","inline fun AvatarView.loadImage(data: List<Any?>, crossinline onStart: () -> Unit = {}, crossinline onComplete: () -> Unit = {}, noinline onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit = { _, _ -> }, noinline onError: (request: ImageRequest, throwable: Throwable) -> Unit = { _, _ -> }, builder: ImageRequest.Builder.() -> Unit = {})","io.getstream.avatarview.coil.loadImage"]},{"name":"inline fun AvatarView.loadImage(vararg data: Any?, crossinline onStart: () -> Unit = {}, crossinline onComplete: () -> Unit = {}, noinline onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit = { _, _ -> }, noinline onError: (request: ImageRequest, throwable: Throwable) -> Unit = { _, _ -> }, builder: ImageRequest.Builder.() -> Unit = {})","description":"io.getstream.avatarview.coil.loadImage","location":"avatarview-coil/io.getstream.avatarview.coil/load-image.html","searchKeys":["loadImage","inline fun AvatarView.loadImage(vararg data: Any?, crossinline onStart: () -> Unit = {}, crossinline onComplete: () -> Unit = {}, noinline onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit = { _, _ -> }, noinline onError: (request: ImageRequest, throwable: Throwable) -> Unit = { _, _ -> }, builder: ImageRequest.Builder.() -> Unit = {})","io.getstream.avatarview.coil.loadImage"]},{"name":"interface ImageHeadersProvider","description":"io.getstream.avatarview.coil.ImageHeadersProvider","location":"avatarview-coil/io.getstream.avatarview.coil/-image-headers-provider/index.html","searchKeys":["ImageHeadersProvider","interface ImageHeadersProvider","io.getstream.avatarview.coil.ImageHeadersProvider"]},{"name":"object AvatarCoil","description":"io.getstream.avatarview.coil.AvatarCoil","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-coil/index.html","searchKeys":["AvatarCoil","object AvatarCoil","io.getstream.avatarview.coil.AvatarCoil"]},{"name":"object AvatarImageLoaderInternal","description":"io.getstream.avatarview.coil.AvatarImageLoaderInternal","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-image-loader-internal/index.html","searchKeys":["AvatarImageLoaderInternal","object AvatarImageLoaderInternal","io.getstream.avatarview.coil.AvatarImageLoaderInternal"]},{"name":"open class AvatarBitmapFactory(context: Context)","description":"io.getstream.avatarview.coil.AvatarBitmapFactory","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-bitmap-factory/index.html","searchKeys":["AvatarBitmapFactory","open class AvatarBitmapFactory(context: Context)","io.getstream.avatarview.coil.AvatarBitmapFactory"]},{"name":"open fun avatarBitmapKey(avatar: Avatar): String?","description":"io.getstream.avatarview.coil.AvatarBitmapFactory.avatarBitmapKey","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-bitmap-factory/avatar-bitmap-key.html","searchKeys":["avatarBitmapKey","open fun avatarBitmapKey(avatar: Avatar): String?","io.getstream.avatarview.coil.AvatarBitmapFactory.avatarBitmapKey"]},{"name":"open fun loadAvatarBitmapBlocking(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap?","description":"io.getstream.avatarview.coil.AvatarBitmapFactory.loadAvatarBitmapBlocking","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-bitmap-factory/load-avatar-bitmap-blocking.html","searchKeys":["loadAvatarBitmapBlocking","open fun loadAvatarBitmapBlocking(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap?","io.getstream.avatarview.coil.AvatarBitmapFactory.loadAvatarBitmapBlocking"]},{"name":"open fun loadAvatarPlaceholderBitmapBlocking(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap?","description":"io.getstream.avatarview.coil.AvatarBitmapFactory.loadAvatarPlaceholderBitmapBlocking","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-bitmap-factory/load-avatar-placeholder-bitmap-blocking.html","searchKeys":["loadAvatarPlaceholderBitmapBlocking","open fun loadAvatarPlaceholderBitmapBlocking(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap?","io.getstream.avatarview.coil.AvatarBitmapFactory.loadAvatarPlaceholderBitmapBlocking"]},{"name":"open override fun newImageLoader(): ImageLoader","description":"io.getstream.avatarview.coil.AvatarImageLoaderFactory.newImageLoader","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-image-loader-factory/new-image-loader.html","searchKeys":["newImageLoader","open override fun newImageLoader(): ImageLoader","io.getstream.avatarview.coil.AvatarImageLoaderFactory.newImageLoader"]},{"name":"open suspend fun createAvatarBitmaps(avatar: Avatar, avatarSize: Int): Bitmap?","description":"io.getstream.avatarview.coil.AvatarBitmapFactory.createAvatarBitmaps","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-bitmap-factory/create-avatar-bitmaps.html","searchKeys":["createAvatarBitmaps","open suspend fun createAvatarBitmaps(avatar: Avatar, avatarSize: Int): Bitmap?","io.getstream.avatarview.coil.AvatarBitmapFactory.createAvatarBitmaps"]},{"name":"open suspend fun loadAvatarBitmap(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap?","description":"io.getstream.avatarview.coil.AvatarBitmapFactory.loadAvatarBitmap","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-bitmap-factory/load-avatar-bitmap.html","searchKeys":["loadAvatarBitmap","open suspend fun loadAvatarBitmap(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap?","io.getstream.avatarview.coil.AvatarBitmapFactory.loadAvatarBitmap"]},{"name":"open suspend fun loadAvatarPlaceholderBitmap(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap?","description":"io.getstream.avatarview.coil.AvatarBitmapFactory.loadAvatarPlaceholderBitmap","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-bitmap-factory/load-avatar-placeholder-bitmap.html","searchKeys":["loadAvatarPlaceholderBitmap","open suspend fun loadAvatarPlaceholderBitmap(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap?","io.getstream.avatarview.coil.AvatarBitmapFactory.loadAvatarPlaceholderBitmap"]},{"name":"suspend fun loadAsBitmap(context: Context, data: Any?, onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit = { _, _ -> }, onError: (request: ImageRequest, throwable: Throwable) -> Unit = { _, _ -> }): Bitmap?","description":"io.getstream.avatarview.coil.AvatarImageLoaderInternal.loadAsBitmap","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-image-loader-internal/load-as-bitmap.html","searchKeys":["loadAsBitmap","suspend fun loadAsBitmap(context: Context, data: Any?, onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit = { _, _ -> }, onError: (request: ImageRequest, throwable: Throwable) -> Unit = { _, _ -> }): Bitmap?","io.getstream.avatarview.coil.AvatarImageLoaderInternal.loadAsBitmap"]},{"name":"val avatarBorderWidth: Int","description":"io.getstream.avatarview.coil.Avatar.avatarBorderWidth","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/avatar-border-width.html","searchKeys":["avatarBorderWidth","val avatarBorderWidth: Int","io.getstream.avatarview.coil.Avatar.avatarBorderWidth"]},{"name":"val data: List<Any?>","description":"io.getstream.avatarview.coil.Avatar.data","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/data.html","searchKeys":["data","val data: List<Any?>","io.getstream.avatarview.coil.Avatar.data"]},{"name":"val errorPlaceholder: Drawable?","description":"io.getstream.avatarview.coil.Avatar.errorPlaceholder","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/error-placeholder.html","searchKeys":["errorPlaceholder","val errorPlaceholder: Drawable?","io.getstream.avatarview.coil.Avatar.errorPlaceholder"]},{"name":"val maxSectionSize: Int","description":"io.getstream.avatarview.coil.Avatar.maxSectionSize","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/max-section-size.html","searchKeys":["maxSectionSize","val maxSectionSize: Int","io.getstream.avatarview.coil.Avatar.maxSectionSize"]},{"name":"val onError: (request: ImageRequest, throwable: Throwable) -> Unit","description":"io.getstream.avatarview.coil.Avatar.onError","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/on-error.html","searchKeys":["onError","val onError: (request: ImageRequest, throwable: Throwable) -> Unit","io.getstream.avatarview.coil.Avatar.onError"]},{"name":"val onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit","description":"io.getstream.avatarview.coil.Avatar.onSuccess","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar/on-success.html","searchKeys":["onSuccess","val onSuccess: (request: ImageRequest, metadata: ImageResult.Metadata) -> Unit","io.getstream.avatarview.coil.Avatar.onSuccess"]},{"name":"var imageHeadersProvider: ImageHeadersProvider","description":"io.getstream.avatarview.coil.AvatarCoil.imageHeadersProvider","location":"avatarview-coil/io.getstream.avatarview.coil/-avatar-coil/image-headers-provider.html","searchKeys":["imageHeadersProvider","var imageHeadersProvider: ImageHeadersProvider","io.getstream.avatarview.coil.AvatarCoil.imageHeadersProvider"]},{"name":"class StreamAvatarBitmapFactory(context: Context) : AvatarBitmapFactory","description":"io.getstream.avatarview.stream.integration.StreamAvatarBitmapFactory","location":"avatarview-stream-integration/io.getstream.avatarview.stream.integration/-stream-avatar-bitmap-factory/index.html","searchKeys":["StreamAvatarBitmapFactory","class StreamAvatarBitmapFactory(context: Context) : AvatarBitmapFactory","io.getstream.avatarview.stream.integration.StreamAvatarBitmapFactory"]},{"name":"fun AvatarView.setChannelData(channel: Channel, errorPlaceholder: Drawable? = null)","description":"io.getstream.avatarview.stream.integration.setChannelData","location":"avatarview-stream-integration/io.getstream.avatarview.stream.integration/set-channel-data.html","searchKeys":["setChannelData","fun AvatarView.setChannelData(channel: Channel, errorPlaceholder: Drawable? = null)","io.getstream.avatarview.stream.integration.setChannelData"]},{"name":"fun AvatarView.setUserData(user: User, errorPlaceholder: Drawable? = null)","description":"io.getstream.avatarview.stream.integration.setUserData","location":"avatarview-stream-integration/io.getstream.avatarview.stream.integration/set-user-data.html","searchKeys":["setUserData","fun AvatarView.setUserData(user: User, errorPlaceholder: Drawable? = null)","io.getstream.avatarview.stream.integration.setUserData"]},{"name":"fun StreamAvatarBitmapFactory(context: Context)","description":"io.getstream.avatarview.stream.integration.StreamAvatarBitmapFactory.StreamAvatarBitmapFactory","location":"avatarview-stream-integration/io.getstream.avatarview.stream.integration/-stream-avatar-bitmap-factory/-stream-avatar-bitmap-factory.html","searchKeys":["StreamAvatarBitmapFactory","fun StreamAvatarBitmapFactory(context: Context)","io.getstream.avatarview.stream.integration.StreamAvatarBitmapFactory.StreamAvatarBitmapFactory"]},{"name":"open suspend override fun loadAvatarPlaceholderBitmap(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap","description":"io.getstream.avatarview.stream.integration.StreamAvatarBitmapFactory.loadAvatarPlaceholderBitmap","location":"avatarview-stream-integration/io.getstream.avatarview.stream.integration/-stream-avatar-bitmap-factory/load-avatar-placeholder-bitmap.html","searchKeys":["loadAvatarPlaceholderBitmap","open suspend override fun loadAvatarPlaceholderBitmap(data: Any?, avatar: Avatar, avatarSize: Int): Bitmap","io.getstream.avatarview.stream.integration.StreamAvatarBitmapFactory.loadAvatarPlaceholderBitmap"]}]